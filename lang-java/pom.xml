<?xml version="1.0" encoding="UTF-8"?>
<!--

    This file is part of Eclipse Steady.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    SPDX-License-Identifier: Apache-2.0
    SPDX-FileCopyrightText: Copyright (c) 2018-2020 SAP SE or an SAP affiliate company and Eclipse Steady contributors

-->
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.steady</groupId>
		<artifactId>root</artifactId>
		<version>3.2.6-SNAPSHOT</version>
	</parent>
	<artifactId>lang-java</artifactId>

	<name>steady-lang-java</name>
	<description>Core classes for Java analysis</description>
	
	<properties>
		<maven.deploy.skip>false</maven.deploy.skip>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.eclipse.steady</groupId>
			<artifactId>lang</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bitbucket.mstrobel</groupId>
			<artifactId>procyon-compilertools</artifactId>
			<version>0.5.36</version>
		</dependency>
		<dependency>
			<groupId>ch.uzh.ifi.seal</groupId>
			<artifactId>changedistiller</artifactId>
			<version>0.0.4</version>
		</dependency>
		<!-- The following are dependencies of ChangeDistiller (which is not in 
			any repository) -->
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assistedinject</artifactId>
 			<version>5.0.0</version><!-- 3.0 in the original POM from ChangeDistiller, 5.0.1 fails with API incompatibility (the included Guava vulnerability is not relevant) -->
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version><!-- 4.4.2 in the original POM from ChangeDistiller -->
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.eclipse.steady</groupId>
			<artifactId>shared</artifactId>
			<classifier>tests</classifier> <!-- type=test-jar does not seem to work here, use classifier instead -->
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Used in UtilTest -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Used to mock REST services -->
		<dependency>
			<groupId>com.xebialabs.restito</groupId>
			<artifactId>restito</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<configuration>
					<visitor>true</visitor>
					<listener>true</listener>
				</configuration>
			</plugin>	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<!-- Include changedistiller, which is not available on Maven Central -->
					<execution>
						<id>normal-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<includes>
									<include>ch.uzh.ifi.seal:changedistiller</include>
								</includes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>ch.uzh.ifi.seal:changedistiller</artifact>
									<excludes>
										<exclude>META-INF/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
					<!-- Used for static and dynamic (-agent option)
					instrumentation. -->
					<execution>
						<id>self-contained-agent-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<transformers>
								<!-- Required to be used with the -agent option-->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<premain-class>org.eclipse.steady.java.monitor.DynamicTransformer</premain-class>
									</manifestEntries>
								</transformer>
								<!-- Required for re-packaged Log4j2 services-->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
								<!-- Required to adjust Log4j2Plugins.dat, see:
								https://github.com/edwgiz/maven-shaded-log4j-transformer
								https://stackoverflow.com/questions/67133027/error-statuslogger-unrecognized-format-specifier
								-->
								<transformer implementation="io.github.edwgiz.log4j.maven.plugins.shade.transformer.Log4j2PluginCacheFileTransformer">
                                </transformer>
							</transformers>
							<artifactSet>
								<includes>
									<include>*:*</include>
								</includes>
								<excludes>
									<exclude>ch.uzh.ifi.seal:changedistiller</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
								<!-- Apparently, the multi-release class files
								do not pose any problem. -->
								<!-- <filter>
									<artifact>org.apache.logging.log4j:*</artifact>
									<excludes>
										<exclude>META-INF/versions/**</exclude>
									</excludes>
								</filter> -->
							</filters>
							<relocations>
								<relocation>
									<pattern>org.apache</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.org.apache</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.slf4j</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.org.slf4j</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.antlr</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.org.antlr</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.aopalliance</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.org.aopalliance</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.com</shadedPattern>
								</relocation>
								<!-- <relocation>
									<pattern>javax</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.javax</shadedPattern>
								</relocation> -->
								<relocation>
									<pattern>javassist</pattern>
									<shadedPattern>org.eclipse.steady.repackaged.javassist</shadedPattern>
								</relocation>
							</relocations>
						</configuration>
					</execution>
				</executions>
				<dependencies>
                    <dependency>
                        <groupId>io.github.edwgiz</groupId>
                        <artifactId>log4j-maven-shade-plugin-extensions</artifactId>
                        <version>2.17.1</version>
                    </dependency>
                </dependencies>
			</plugin>
			<!-- Flatten a 2nd time after shade, in order to process the dependency-reduced-pom, see
				https://stackoverflow.com/questions/52552329/use-maven-flatten-plugin-and-maven-shade-plugin-at-the-same-time
				https://stackoverflow.com/questions/8243912/changing-the-order-of-maven-plugin-execution#8244173 --> 
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>flatten-maven-plugin</artifactId>
			    <version>1.2.2</version>
			    <executions>
			    	<execution>
						<id>flatten-after-shade</id>
						<phase>package</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<flattenMode>ossrh</flattenMode>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
